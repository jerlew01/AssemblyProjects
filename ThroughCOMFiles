section .data
    filename db 'example.com', 0
    file_handle dd 0
    buffer_size equ 64
    buffer db buffer_size
section .text
    global _start
_start:
    ; open the file
    mov eax, 5      ; sys_open
    mov ebx, filename
    mov ecx, 0      ; O_RDONLY
    int 0x80        ; call kernel

    ; check for errors
    cmp eax, 0
    jl _exit

    ; save file handle
    mov [file_handle], eax

    ; read from the file and print contents
    mov eax, 3      ; sys_read
    mov ebx, [file_handle]
    mov ecx, buffer
    mov edx, buffer_size
    int 0x80        ; call kernel

    ; check for errors
    cmp eax, 0
    jl _close

    ; print buffer
    mov eax, 4      ; sys_write
    mov ebx, 1      ; stdout
    mov ecx, buffer
    mov edx, eax
    int 0x80        ; call kernel

    ; close the file
_close:
    mov eax, 6      ; sys_close
    mov ebx, [file_handle]
    int 0x80        ; call kernel

_exit:
    ; exit the program
    mov eax, 1      ; sys_exit
    xor ebx, ebx    ; return code 0
    int 0x80        ; call kernel
